[package]
name = "fidget"
description = "Infrastructure for complex closed-form implicit surfaces"
readme = "../README.md"

version.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
authors.workspace = true
rust-version.workspace = true

[dependencies]
fidget-core   = { path = "../fidget-core",   version = "=0.4.0" }
fidget-gui    = { path = "../fidget-gui",    version = "=0.4.0", optional = true }
fidget-jit    = { path = "../fidget-jit",    version = "=0.4.0", optional = true }
fidget-mesh   = { path = "../fidget-mesh",   version = "=0.4.0", optional = true }
fidget-raster = { path = "../fidget-raster", version = "=0.4.0", optional = true }
fidget-rhai   = { path = "../fidget-rhai",   version = "=0.4.0", optional = true }
fidget-solver = { path = "../fidget-solver", version = "=0.4.0", optional = true }

rhai = { workspace = true, optional = true }
document-features.workspace = true
workspace-hack = { version = "0.1", path = "../workspace-hack" }

[features]
default = ["jit", "rhai", "mesh", "solver", "raster", "gui"]

## Enables fast evaluation via a JIT compiler.  This is exposed in the
## [`fidget::jit`](crate::jit) module, and is supported on macOS, Linux, and
## Windows (i.e. all supported platforms except WebAssembly).  There's no way to
## disable the feature on specific platforms
## ([Cargo issue](https://github.com/rust-lang/cargo/issues/1197));
## users will have to disable it manually via `default-features = false`.
jit = ["fidget-jit"]

## Enable [Rhai](https://rhai.rs/) bindings, in the
## [`fidget::rhai`](crate::rhai) module
rhai = ["fidget-rhai", "dep:rhai"]

## Enable meshing in the [`fidget::mesh`](crate::mesh) module
mesh = ["fidget-mesh"]

## Enables constraint solving in the [`fidget::solver`](crate::solver) module
solver = ["fidget-solver"]

## Enables image rendering in the [`fidget::raster`](crate::raster) module
raster = ["fidget-raster"]

## Enables GUI abstractions in the [`fidget::gui`](crate::gui) module
gui = ["fidget-gui"]

[[bench]]
name = "render"
harness = false

[[bench]]
name = "mesh"
harness = false

[[bench]]
name = "function_call"
harness = false

[lib]
bench = false

[dev-dependencies]
criterion.workspace = true
rayon.workspace = true
nalgebra.workspace = true
